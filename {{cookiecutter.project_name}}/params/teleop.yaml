{{cookiecutter.project_name}}:
  ros__parameters:
    # The maximum rate at which updates should occur, and hence the max rate at which commands are sent.
    # Leaving this unset makes the max update rate unlimited.
    # update_rate: 50.0

    # The minimum rate at which updates occur.
    # Leaving this unset will allow for indefinite lapses between updates.
    min_update_rate: 2.0

    input_sources:
      names: [
        "game_controller_source"
      ]

      # Declare types for the sources
      game_controller_source:
        type: "teleop_modular_joy/JoyInputSource"

    control_modes:
      names: [
        # First in the list gets activated at startup
        "normal_mode",
        "turbo_mode"
      ]

      # Declare types for the modes
      normal_mode:
        type: "teleop_modular_twist/TwistControlMode"
      turbo_mode:
        type: "teleop_modular_twist/TwistControlMode"

    commands:
      names: [
        "enter_turbo_mode",
        "enter_normal_mode",
        "lock",
        "unlock",
        "log_locked",
        "log_unlocked"
      ]

      enter_turbo_mode:
        on: "turbo_mode/down"
        type: "switch_control_mode"
        to: "turbo_mode"
      enter_normal_mode:
        on: "turbo_mode/up"
        type: "switch_control_mode"
        to: "normal_mode"
      lock:
        on: "lock/down"
        # on_any: ["lock/down", "start"]
        type: "set_button"
        name: "locked"
        value: true
      unlock:
        on: "unlock/down"
        type: "set_button"
        name: "locked"
        value: false
      log_locked:
        on: "locked/down"
        type: "log"
        message: "Locked"
      log_unlocked:
        on: "locked/down"
        type: "log"
        message: "Unlocked"


game_controller_source:
  ros__parameters:
    topic: "/joy"
    # These are the default mappings for a game_controller_node.
    # https://docs.ros.org/en/ros2_packages/rolling/api/joy/index.html
    # If you use joy_node, you'll need to figure out what the mapping is yourself.
    # So, run joy, `ros2 topic echo /joy`, and mess around with your controller to figure out what it is for you.
    button_definitions: [
      "A",
      "B",
      "X",
      "Y",
      "BACK",
      "GUIDE",
      "START",
      "LEFTSTICK",
      "RIGHTSTICK",
      "LEFTSHOULDER",
      "RIGHTSHOULDER",
      "DPAD_UP",
      "DPAD_DOWN",
      "DPAD_LEFT",
      "DPAD_RIGHT",
      "MISC1",
      "PADDLE1",
      "PADDLE2",
      "PADDLE3",
      "PADDLE4",
      "TOUCHPAD"
    ]
    axis_definitions: [
      "LEFTX",
      "LEFTY",
      "RIGHTX",
      "RIGHTY",
      "TRIGGERLEFT",
      "TRIGGERRIGHT"
    ]

    remap:
      axes:
        linear:
          x:
            from: "LEFTY"
        angular:
          z:
            from: "RIGHTX"
        speed:
          from: "TRIGGERRIGHT"
          invert: true

      buttons:
        turbo_mode:
          from: "RIGHTSHOULDER"
        lock:
          from: "GUIDE"
        unlock:
          from: "START"


normal_mode:
  ros__parameters:
    topic: "/turtle1/cmd_vel"
    # stamped_topic: "/some_stamped_topic"
    qos: 10

    use_speed_input: false

    scale:
      linear:
        x: 1.0
      angular:
        z: 3.14


turbo_mode:
  ros__parameters:
    topic: "/turtle1/cmd_vel"
    # stamped_topic: "/some_stamped_topic"
    qos: 10

    use_speed_input: false

    scale:
      linear:
        all: 4.0
      angular:
        z: 3.14
        all: 2.0

